components:
  schemas:
    BaseModel:
      properties: {}
      title: BaseModel
      type: object
    ChatCompletionAssistantMessageParam:
      properties:
        content:
          anyOf:
          - type: string
          - items:
              anyOf:
              - $ref: '#/components/schemas/ChatCompletionContentPartTextParam'
              - $ref: '#/components/schemas/ChatCompletionContentPartRefusalParam'
            type: array
          - type: 'null'
          title: Content
        function_call:
          anyOf:
          - $ref: '#/components/schemas/FunctionCall'
          - type: 'null'
        name:
          title: Name
          type: string
        refusal:
          anyOf:
          - type: string
          - type: 'null'
          title: Refusal
        role:
          const: assistant
          enum:
          - assistant
          title: Role
          type: string
        tool_calls:
          items:
            $ref: '#/components/schemas/ChatCompletionMessageToolCallParam'
          title: Tool Calls
          type: array
      required:
      - role
      title: ChatCompletionAssistantMessageParam
      type: object
    ChatCompletionContentPartImageParam:
      properties:
        image_url:
          $ref: '#/components/schemas/ImageURL'
        type:
          const: image_url
          enum:
          - image_url
          title: Type
          type: string
      required:
      - image_url
      - type
      title: ChatCompletionContentPartImageParam
      type: object
    ChatCompletionContentPartRefusalParam:
      properties:
        refusal:
          title: Refusal
          type: string
        type:
          const: refusal
          enum:
          - refusal
          title: Type
          type: string
      required:
      - refusal
      - type
      title: ChatCompletionContentPartRefusalParam
      type: object
    ChatCompletionContentPartTextParam:
      properties:
        text:
          title: Text
          type: string
        type:
          const: text
          enum:
          - text
          title: Type
          type: string
      required:
      - text
      - type
      title: ChatCompletionContentPartTextParam
      type: object
    ChatCompletionFunctionMessageParam:
      properties:
        content:
          anyOf:
          - type: string
          - type: 'null'
          title: Content
        name:
          title: Name
          type: string
        role:
          const: function
          enum:
          - function
          title: Role
          type: string
      required:
      - content
      - name
      - role
      title: ChatCompletionFunctionMessageParam
      type: object
    ChatCompletionMessageToolCallParam:
      properties:
        function:
          $ref: '#/components/schemas/Function'
        id:
          title: Id
          type: string
        type:
          const: function
          enum:
          - function
          title: Type
          type: string
      required:
      - id
      - function
      - type
      title: ChatCompletionMessageToolCallParam
      type: object
    ChatCompletionNamedFunction:
      additionalProperties: false
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: ChatCompletionNamedFunction
      type: object
    ChatCompletionNamedToolChoiceParam:
      additionalProperties: false
      properties:
        function:
          $ref: '#/components/schemas/ChatCompletionNamedFunction'
        type:
          const: function
          default: function
          enum:
          - function
          title: Type
          type: string
      required:
      - function
      title: ChatCompletionNamedToolChoiceParam
      type: object
    ChatCompletionRequest:
      additionalProperties: false
      properties:
        add_generation_prompt:
          default: true
          description: If true, the generation prompt will be added to the chat template.
            This is a parameter used by chat template in tokenizer config of the model.
          title: Add Generation Prompt
          type: boolean
        add_special_tokens:
          default: false
          description: If true, special tokens (e.g. BOS) will be added to the prompt
            on top of what is added by the chat template. For most models, the chat
            template takes care of adding the special tokens so this should be set
            to false (as is the default).
          title: Add Special Tokens
          type: boolean
        best_of:
          anyOf:
          - type: integer
          - type: 'null'
          title: Best Of
        chat_template:
          anyOf:
          - type: string
          - type: 'null'
          description: A Jinja template to use for this conversion. If this is not
            passed, the model's default chat template will be used instead.
          title: Chat Template
        chat_template_kwargs:
          anyOf:
          - type: object
          - type: 'null'
          description: Additional kwargs to pass to the template renderer. Will be
            accessible by the chat template.
          title: Chat Template Kwargs
        documents:
          anyOf:
          - items:
              additionalProperties:
                type: string
              type: object
            type: array
          - type: 'null'
          description: A list of dicts representing documents that will be accessible
            to the model if it is performing RAG (retrieval-augmented generation).
            If the template does not support RAG, this argument will have no effect.
            We recommend that each document should be a dict containing "title" and
            "text" keys.
          title: Documents
        early_stopping:
          default: false
          title: Early Stopping
          type: boolean
        echo:
          default: false
          description: If true, the new message will be prepended with the last message
            if they belong to the same role.
          title: Echo
          type: boolean
        frequency_penalty:
          anyOf:
          - type: number
          - type: 'null'
          default: 0.0
          title: Frequency Penalty
        guided_choice:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: If specified, the output will be exactly one of the choices.
          title: Guided Choice
        guided_decoding_backend:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, will override the default guided decoding backend
            of the server for this specific request. If set, must be either 'outlines'
            / 'lm-format-enforcer'
          title: Guided Decoding Backend
        guided_grammar:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, the output will follow the context free grammar.
          title: Guided Grammar
        guided_json:
          anyOf:
          - type: string
          - type: object
          - $ref: '#/components/schemas/BaseModel'
          - type: 'null'
          description: If specified, the output will follow the JSON schema.
          title: Guided Json
        guided_regex:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, the output will follow the regex pattern.
          title: Guided Regex
        guided_whitespace_pattern:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, will override the default whitespace pattern
            for guided json decoding.
          title: Guided Whitespace Pattern
        ignore_eos:
          default: false
          title: Ignore Eos
          type: boolean
        include_stop_str_in_output:
          default: false
          title: Include Stop Str In Output
          type: boolean
        length_penalty:
          default: 1.0
          title: Length Penalty
          type: number
        logit_bias:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
          title: Logit Bias
        logprobs:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Logprobs
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tokens
        messages:
          items:
            anyOf:
            - $ref: '#/components/schemas/ChatCompletionSystemMessageParam'
            - $ref: '#/components/schemas/ChatCompletionUserMessageParam'
            - $ref: '#/components/schemas/ChatCompletionAssistantMessageParam'
            - $ref: '#/components/schemas/ChatCompletionToolMessageParam'
            - $ref: '#/components/schemas/ChatCompletionFunctionMessageParam'
            - $ref: '#/components/schemas/CustomChatCompletionMessageParam'
          title: Messages
          type: array
        min_p:
          default: 0.0
          title: Min P
          type: number
        min_tokens:
          default: 0
          title: Min Tokens
          type: integer
        model:
          title: Model
          type: string
        n:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          title: N
        presence_penalty:
          anyOf:
          - type: number
          - type: 'null'
          default: 0.0
          title: Presence Penalty
        repetition_penalty:
          default: 1.0
          title: Repetition Penalty
          type: number
        response_format:
          anyOf:
          - $ref: '#/components/schemas/ResponseFormat'
          - type: 'null'
        seed:
          anyOf:
          - maximum: 9.223372036854776e+18
            minimum: -9.223372036854776e+18
            type: integer
          - type: 'null'
          title: Seed
        skip_special_tokens:
          default: true
          title: Skip Special Tokens
          type: boolean
        spaces_between_special_tokens:
          default: true
          title: Spaces Between Special Tokens
          type: boolean
        stop:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          - type: 'null'
          title: Stop
        stop_token_ids:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Stop Token Ids
        stream:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Stream
        stream_options:
          anyOf:
          - $ref: '#/components/schemas/StreamOptions'
          - type: 'null'
        temperature:
          anyOf:
          - type: number
          - type: 'null'
          default: 0.7
          title: Temperature
        tool_choice:
          anyOf:
          - const: none
            enum:
            - none
            type: string
          - $ref: '#/components/schemas/ChatCompletionNamedToolChoiceParam'
          - type: 'null'
          default: none
          title: Tool Choice
        tools:
          anyOf:
          - items:
              $ref: '#/components/schemas/ChatCompletionToolsParam'
            type: array
          - type: 'null'
          title: Tools
        top_k:
          default: -1
          title: Top K
          type: integer
        top_logprobs:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Top Logprobs
        top_p:
          anyOf:
          - type: number
          - type: 'null'
          default: 1.0
          title: Top P
        truncate_prompt_tokens:
          anyOf:
          - minimum: 1.0
            type: integer
          - type: 'null'
          title: Truncate Prompt Tokens
        use_beam_search:
          default: false
          title: Use Beam Search
          type: boolean
        user:
          anyOf:
          - type: string
          - type: 'null'
          title: User
      required:
      - messages
      - model
      title: ChatCompletionRequest
      type: object
    ChatCompletionSystemMessageParam:
      properties:
        content:
          anyOf:
          - type: string
          - items:
              $ref: '#/components/schemas/ChatCompletionContentPartTextParam'
            type: array
          title: Content
        name:
          title: Name
          type: string
        role:
          const: system
          enum:
          - system
          title: Role
          type: string
      required:
      - content
      - role
      title: ChatCompletionSystemMessageParam
      type: object
    ChatCompletionToolMessageParam:
      properties:
        content:
          anyOf:
          - type: string
          - items:
              $ref: '#/components/schemas/ChatCompletionContentPartTextParam'
            type: array
          title: Content
        role:
          const: tool
          enum:
          - tool
          title: Role
          type: string
        tool_call_id:
          title: Tool Call Id
          type: string
      required:
      - content
      - role
      - tool_call_id
      title: ChatCompletionToolMessageParam
      type: object
    ChatCompletionToolsParam:
      additionalProperties: false
      properties:
        function:
          $ref: '#/components/schemas/FunctionDefinition'
        type:
          const: function
          default: function
          enum:
          - function
          title: Type
          type: string
      required:
      - function
      title: ChatCompletionToolsParam
      type: object
    ChatCompletionUserMessageParam:
      properties:
        content:
          anyOf:
          - type: string
          - items:
              anyOf:
              - $ref: '#/components/schemas/ChatCompletionContentPartTextParam'
              - $ref: '#/components/schemas/ChatCompletionContentPartImageParam'
            type: array
          title: Content
        name:
          title: Name
          type: string
        role:
          const: user
          enum:
          - user
          title: Role
          type: string
      required:
      - content
      - role
      title: ChatCompletionUserMessageParam
      type: object
    CompletionRequest:
      additionalProperties: false
      properties:
        add_special_tokens:
          default: true
          description: If true (the default), special tokens (e.g. BOS) will be added
            to the prompt.
          title: Add Special Tokens
          type: boolean
        best_of:
          anyOf:
          - type: integer
          - type: 'null'
          title: Best Of
        early_stopping:
          default: false
          title: Early Stopping
          type: boolean
        echo:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Echo
        frequency_penalty:
          anyOf:
          - type: number
          - type: 'null'
          default: 0.0
          title: Frequency Penalty
        guided_choice:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: If specified, the output will be exactly one of the choices.
          title: Guided Choice
        guided_decoding_backend:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, will override the default guided decoding backend
            of the server for this specific request. If set, must be one of 'outlines'
            / 'lm-format-enforcer'
          title: Guided Decoding Backend
        guided_grammar:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, the output will follow the context free grammar.
          title: Guided Grammar
        guided_json:
          anyOf:
          - type: string
          - type: object
          - $ref: '#/components/schemas/BaseModel'
          - type: 'null'
          description: If specified, the output will follow the JSON schema.
          title: Guided Json
        guided_regex:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, the output will follow the regex pattern.
          title: Guided Regex
        guided_whitespace_pattern:
          anyOf:
          - type: string
          - type: 'null'
          description: If specified, will override the default whitespace pattern
            for guided json decoding.
          title: Guided Whitespace Pattern
        ignore_eos:
          default: false
          title: Ignore Eos
          type: boolean
        include_stop_str_in_output:
          default: false
          title: Include Stop Str In Output
          type: boolean
        length_penalty:
          default: 1.0
          title: Length Penalty
          type: number
        logit_bias:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
          title: Logit Bias
        logprobs:
          anyOf:
          - type: integer
          - type: 'null'
          title: Logprobs
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          default: 16
          title: Max Tokens
        min_p:
          default: 0.0
          title: Min P
          type: number
        min_tokens:
          default: 0
          title: Min Tokens
          type: integer
        model:
          title: Model
          type: string
        n:
          default: 1
          title: N
          type: integer
        presence_penalty:
          anyOf:
          - type: number
          - type: 'null'
          default: 0.0
          title: Presence Penalty
        prompt:
          anyOf:
          - items:
              type: integer
            type: array
          - items:
              items:
                type: integer
              type: array
            type: array
          - type: string
          - items:
              type: string
            type: array
          title: Prompt
        repetition_penalty:
          default: 1.0
          title: Repetition Penalty
          type: number
        response_format:
          anyOf:
          - $ref: '#/components/schemas/ResponseFormat'
          - type: 'null'
          description: 'Similar to chat completion, this parameter specifies the format
            of output. Only {''type'': ''json_object''} or {''type'': ''text'' } is
            supported.'
        seed:
          anyOf:
          - maximum: 9.223372036854776e+18
            minimum: -9.223372036854776e+18
            type: integer
          - type: 'null'
          title: Seed
        skip_special_tokens:
          default: true
          title: Skip Special Tokens
          type: boolean
        spaces_between_special_tokens:
          default: true
          title: Spaces Between Special Tokens
          type: boolean
        stop:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          - type: 'null'
          title: Stop
        stop_token_ids:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Stop Token Ids
        stream:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Stream
        stream_options:
          anyOf:
          - $ref: '#/components/schemas/StreamOptions'
          - type: 'null'
        suffix:
          anyOf:
          - type: string
          - type: 'null'
          title: Suffix
        temperature:
          anyOf:
          - type: number
          - type: 'null'
          default: 1.0
          title: Temperature
        top_k:
          default: -1
          title: Top K
          type: integer
        top_p:
          anyOf:
          - type: number
          - type: 'null'
          default: 1.0
          title: Top P
        truncate_prompt_tokens:
          anyOf:
          - minimum: 1.0
            type: integer
          - type: 'null'
          title: Truncate Prompt Tokens
        use_beam_search:
          default: false
          title: Use Beam Search
          type: boolean
        user:
          anyOf:
          - type: string
          - type: 'null'
          title: User
      required:
      - model
      - prompt
      title: CompletionRequest
      type: object
    CustomChatCompletionContentPartParam:
      additionalProperties: true
      properties:
        type:
          title: Type
          type: string
      required:
      - type
      title: CustomChatCompletionContentPartParam
      type: object
    CustomChatCompletionMessageParam:
      description: Enables custom roles in the Chat Completion API.
      properties:
        content:
          anyOf:
          - type: string
          - items:
              anyOf:
              - $ref: '#/components/schemas/ChatCompletionContentPartTextParam'
              - $ref: '#/components/schemas/ChatCompletionContentPartImageParam'
              - $ref: '#/components/schemas/CustomChatCompletionContentPartParam'
            type: array
          title: Content
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
      required:
      - role
      title: CustomChatCompletionMessageParam
      type: object
    Function:
      properties:
        arguments:
          title: Arguments
          type: string
        name:
          title: Name
          type: string
      required:
      - arguments
      - name
      title: Function
      type: object
    FunctionCall:
      properties:
        arguments:
          title: Arguments
          type: string
        name:
          title: Name
          type: string
      required:
      - arguments
      - name
      title: FunctionCall
      type: object
    FunctionDefinition:
      additionalProperties: false
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        name:
          title: Name
          type: string
        parameters:
          anyOf:
          - type: object
          - type: 'null'
          title: Parameters
      required:
      - name
      title: FunctionDefinition
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ImageURL:
      properties:
        detail:
          enum:
          - auto
          - low
          - high
          title: Detail
          type: string
        url:
          title: Url
          type: string
      required:
      - url
      title: ImageURL
      type: object
    InternalServerError:
      description: Internal Server Error
      properties:
        detail:
          title: Error Detail
          type: string
        error:
          title: Message
          type: string
      required:
      - error
      title: InternalServerError
      type: object
    InvalidArgument:
      description: Bad Request
      properties:
        detail:
          title: Error Detail
          type: string
        error:
          title: Message
          type: string
      required:
      - error
      title: InvalidArgument
      type: object
    Message:
      properties:
        content:
          title: Content
          type: string
        role:
          enum:
          - system
          - user
          - assistant
          title: Role
          type: string
      required:
      - role
      - content
      title: Message
      type: object
    NotFound:
      description: Not Found
      properties:
        detail:
          title: Error Detail
          type: string
        error:
          title: Message
          type: string
      required:
      - error
      title: NotFound
      type: object
    ResponseFormat:
      additionalProperties: false
      properties:
        type:
          enum:
          - text
          - json_object
          title: Type
          type: string
      required:
      - type
      title: ResponseFormat
      type: object
    StreamOptions:
      additionalProperties: false
      properties:
        continuous_usage_stats:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          title: Continuous Usage Stats
        include_usage:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          title: Include Usage
      title: StreamOptions
      type: object
    TaskStatusResponse:
      properties:
        created_at:
          title: Created At
          type: string
        executed_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Executed At
        status:
          enum:
          - in_progress
          - success
          - failure
          - cancelled
          title: Status
          type: string
        task_id:
          title: Task Id
          type: string
      required:
      - task_id
      - status
      - created_at
      - executed_at
      title: TaskStatusResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    chat__Input:
      properties:
        max_tokens:
          default: 2048
          maximum: 2048
          minimum: 128
          title: Max Tokens
          type: integer
        messages:
          default:
          - content: what is the meaning of life?
            role: user
          items:
            $ref: '#/components/schemas/Message'
          title: Messages
          type: array
        model:
          default: mistralai/Mistral-Nemo-Instruct-2407
          title: Model
          type: string
        stop:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          title: Stop
      title: chat__Input
      type: object
    generate__Input:
      properties:
        max_tokens:
          default: 2048
          maximum: 2048
          minimum: 128
          title: Max Tokens
          type: integer
        model:
          default: mistralai/Mistral-Nemo-Instruct-2407
          title: Model
          type: string
        prompt:
          default: Explain superconductors like I'm five years old
          title: Prompt
          type: string
        stop:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          title: Stop
      title: generate__Input
      type: object
info:
  contact:
    email: contact@bentoml.com
    name: BentoML Team
  description: "# mistral:dev\n\n[![pypi_status](https://img.shields.io/badge/BentoML-1.3.2-informational)](https://pypi.org/project/BentoML)\n\
    [![documentation_status](https://readthedocs.org/projects/bentoml/badge/?version=latest)](https://docs.bentoml.com/)\n\
    [![join_slack](https://badgen.net/badge/Join/BentoML%20Slack/cyan?icon=slack)](https://l.bentoml.com/join-slack-swagger)\n\
    [![BentoML GitHub Repo](https://img.shields.io/github/stars/bentoml/bentoml?style=social)](https://github.com/bentoml/BentoML)\n\
    [![Twitter Follow](https://img.shields.io/twitter/follow/bentomlai?label=Follow%20BentoML&style=social)](https://twitter.com/bentomlai)\n\
    \nThis is a Machine Learning Service created with BentoML.\n\n## Help\n\n* [\U0001F4D6\
    \ Documentation](https://docs.bentoml.com/en/latest/): Learn how to use BentoML.\n\
    * [\U0001F4AC Community](https://l.bentoml.com/join-slack-swagger): Join the BentoML\
    \ Slack community.\n* [\U0001F41B GitHub Issues](https://github.com/bentoml/BentoML/issues):\
    \ Report bugs and feature requests.\n* Tip: you can also [customize this README](https://docs.bentoml.com/en/latest/concepts/bento.html#description).\n"
  title: mistral
  version: None
openapi: 3.0.2
paths:
  /api/chat:
    post:
      description: "\n        light-weight chat API that takes in a list of messages\
        \ and returns a response\n        "
      operationId: mistral__chat
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_tokens:
                  default: 2048
                  maximum: 2048
                  minimum: 128
                  title: Max Tokens
                  type: integer
                messages:
                  default:
                  - content: what is the meaning of life?
                    role: user
                  items:
                    $ref: '#/components/schemas/Message'
                  title: Messages
                  type: array
                model:
                  default: mistralai/Mistral-Nemo-Instruct-2407
                  title: Model
                  type: string
                stop:
                  default: null
                  items:
                    type: string
                  title: Stop
                  type: array
              title: Input
              type: object
      responses:
        200:
          content:
            text/event-stream:
              schema:
                title: strIODescriptor
                type: string
          description: Successful Response
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Not Found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      tags:
      - Service APIs
      x-bentoml-name: chat
  /api/generate:
    post:
      description: ''
      operationId: mistral__generate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                max_tokens:
                  default: 2048
                  maximum: 2048
                  minimum: 128
                  title: Max Tokens
                  type: integer
                model:
                  default: mistralai/Mistral-Nemo-Instruct-2407
                  title: Model
                  type: string
                prompt:
                  default: Explain superconductors like I'm five years old
                  title: Prompt
                  type: string
                stop:
                  default: null
                  items:
                    type: string
                  title: Stop
                  type: array
              title: Input
              type: object
      responses:
        200:
          content:
            text/event-stream:
              schema:
                title: strIODescriptor
                type: string
          description: Successful Response
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Not Found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      tags:
      - Service APIs
      x-bentoml-name: generate
  /chat/:
    get:
      operationId: serve_chat_html__get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Serve Chat Html
  /chat/{full_path}:
    get:
      operationId: catch_all__full_path__get
      parameters:
      - in: path
        name: full_path
        required: true
        schema:
          title: Full Path
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Catch All
  /healthz:
    get:
      description: Health check endpoint. Expecting an empty response with status
        code <code>200</code> when the service is in health state. The <code>/healthz</code>
        endpoint is <b>deprecated</b>. (since Kubernetes v1.16)
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /livez:
    get:
      description: Health check endpoint for Kubernetes. Healthy endpoint responses
        with a <code>200</code> OK status.
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /metrics:
    get:
      description: Prometheus metrics endpoint. The <code>/metrics</code> responses
        with a <code>200</code>. The output can then be used by a Prometheus sidecar
        to scrape the metrics of the service.
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /readyz:
    get:
      description: A <code>200</code> OK status from <code>/readyz</code> endpoint
        indicated the service is ready to accept traffic. From that point and onward,
        Kubernetes will use <code>/livez</code> endpoint to perform periodic health
        checks.
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /v1/chat/completions:
    post:
      operationId: create_chat_completion_chat_completions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Chat Completion
  /v1/completions:
    post:
      operationId: create_completion_completions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Completion
  /v1/models:
    get:
      operationId: show_available_models_models_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Show Available Models
servers:
- url: .
tags:
- description: BentoML Service API endpoints for inference.
  name: Service APIs
- description: Common infrastructure endpoints for observability.
  name: Infrastructure
